<!DOCTYPE html>
<html>
<head>
  <meta http-equiv="Content-type" content="text/html; charset=utf-8">
  <title>ESP Monitor</title>
  <script type="text/javascript" src="chart.js"></script>
  <script type="text/javascript">
    var heap,temp,digi;
    var reloadPeriod = 1000;
    var websock;

    function webSocketLoad() {
      websock = new WebSocket('ws://' + window.location.hostname + ':81/');
      websock.onopen = function(evt) { console.log('websock open'); };
      websock.onclose = function(evt) { console.log('websock close'); };
      websock.onerror = function(evt) { console.log(evt); };
      websock.onmessage = function(evt) {
        // console.log(evt);
        // splitting evt.data into key,value where value might have ':'
        var i = evt.data.indexOf(":");
        var key = evt.data.substr(0,i);
        var value = evt.data.substr(i+1);
        var e = document.getElementById(key);
        if (e) {e.innerHTML = value;};
        if (key == "status") {
           // status line format epoch,timestamp,value
           try {
             var status = value.split(',');
             chart.data.datasets[0].data.push(status[2]);
             chart.data.labels.push(status[1].split(' ')[1]);
             chart.update();
           } catch(err) {
           }
        }
        if (key == "label") {
          document.title = value;
        }

      };
    };

    function buttonclick(e) {
      if (e.id == "ledon")
        websock.send("led:1");
      else
        websock.send("led:0");
    }
    
    function loadValues(){
      var xh = new XMLHttpRequest();
      xh.onreadystatechange = function(){
        if (xh.readyState == 4){
          if(xh.status == 200) {
            var res = JSON.parse(xh.responseText);
          }
        }
      };
      xh.open("GET", "/status", true);
      xh.send(null);
    };
    
    function onBodyLoad(){
      webSocketLoad();
      chartLoad();
   }; 

    function chartLoad() {
      chart = new Chart(document.getElementById("line-chart"), {
        type: 'line',
        data: {
          labels: [],
          datasets: [{ 
            data: [],
              label: "value",
              borderColor: "#3e95cd",
              pointRadius: 0,
              borderWidth: 1,
              fill: false
            }]
        },
        options: {
          title: {
            display: true,
            text: 'myvalue'
          },
          scales: {
            yAxes: [{
              display: true,
              ticks: {
                  beginAtZero: true,
                  stepSize: 50,
                  min: 0,
                  max: 1000
              }
            }]
          }
        }
      });
      var xh = new XMLHttpRequest();
      xh.onreadystatechange = function(){
        if (xh.readyState == 4 ){
          if(xh.status == 200) {
            var lines = xh.responseText.split('\n');
            for(var line = 1; line < lines.length; line++){
                if (lines[line].length) {
                  try {
                    var status = lines[line].split(',');
                    chart.data.datasets[0].data.push(status[2]);
                    chart.data.labels.push(status[1].split(' ')[1]);
                  } catch (err) {
                  }
                }
            }
           chart.update();
          }
        }
      };
      xh.open("GET", "/log.csv", true);
      xh.send(null);
    }

  </script>
</head>
<body id="index" style="margin:0; padding:0;" onload="onBodyLoad()">
 <pre> name:   <span id="name">???</span>
 label:  <span id="label">???</span>
 uptime: <span id="uptime">???</span>
 time:   <span id="time">???</span>
 led:    <span id="led">???</span>
 value:  <span id="value">???</span></pre>
<hr>
<canvas id="line-chart"></canvas>
<hr>
<a href='log.csv' target='_blank'>log</a>
<a href='/edit' target='_blank'>edit</a>
<a href='/reload' target='_blank'>reload</a>
<a href='/reboot' target='_blank'>reboot</a>
</body>
</html>
